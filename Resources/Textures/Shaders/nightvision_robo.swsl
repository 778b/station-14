uniform sampler2D SCREEN_TEXTURE;
const highp float PI = 3.14159265359;
const highp float TWOPI = 6.28318530718;
const highp float timeScale = 0.5;

void fragment() {
    highp vec2 coord = FRAGCOORD.xy * SCREEN_PIXEL_SIZE.xy;
    vec3 color;
    float time = TIME * timeScale;
    float timeDelta = mod(time, 8.0);
    float currenttimeDeltaCos = cos(mod(time, TWOPI));
    float currenttimeDeltaSin = sin(mod(time, TWOPI));
    float alpha = 0.4;

    float fLine = mod(time * 200.0, SCREEN_PIXEL_SIZE.y);
    float sLine = mod(time * 500.0, SCREEN_PIXEL_SIZE.y);
    float zLine = mod(time * 800.0, SCREEN_PIXEL_SIZE.y);

    if (FRAGCOORD.y > fLine - 5.0 && FRAGCOORD.y < fLine + 5.) {
        color = vec3(0.079,0.720,0.021);  // dark green
        alpha = 0.6;
    }
    else if (FRAGCOORD.y > sLine - 3.0 && FRAGCOORD.y < sLine + 3.0) {
        color = vec3(0.079,0.720,0.021);  // dark green
        alpha = 0.9;
    }
    else if (FRAGCOORD.y > zLine - 3.0 && FRAGCOORD.y < zLine + 3.0) {
        color = vec3(0.079,0.720,0.021);  // dark green
        alpha = 0.8;
    }
    else {
        color = vec3(0.000,0.895,0.449);  // green
    }
	//vec3 lightSample = texture(lightMap, fragCoord).rgb;
	
    COLOR = vec4(color, alpha);
}
